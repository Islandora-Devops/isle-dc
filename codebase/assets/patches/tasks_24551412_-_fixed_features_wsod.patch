Index: src/FeaturesManager.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/FeaturesManager.php b/src/FeaturesManager.php
--- a/src/FeaturesManager.php	(revision 6a60f892626b22b7170f8838f0ef82b44a318a68)
+++ b/src/FeaturesManager.php	(date 1613158410066)
@@ -1224,19 +1224,20 @@
         foreach ($config as $item_name => $label) {
           $name = $this->getFullName($config_type, $item_name);
           $data = $this->configStorage->read($name);
-
-          $config_collection[$name] = (new ConfigurationItem($name, $data, [
-            'shortName' => $item_name,
-            'label' => $label,
-            'type' => $config_type,
-            'dependents' => array_keys($dependency_manager->getDependentEntities('config', $name)),
-            // Default to the install directory.
-            'subdirectory' => isset($existing_config_by_directory[$name]) ? $existing_config_by_directory[$name] : InstallStorage::CONFIG_INSTALL_DIRECTORY,
-            'package' => '',
-            'providerExcluded' => NULL,
-            'provider' => isset($existing_config[$name]) ? $existing_config[$name] : NULL,
-            'packageExcluded' => [],
-          ]));
+          if ($data) {
+            $config_collection[$name] = (new ConfigurationItem($name, $data, [
+              'shortName' => $item_name,
+              'label' => $label,
+              'type' => $config_type,
+              'dependents' => array_keys($dependency_manager->getDependentEntities('config', $name)),
+              // Default to the install directory.
+              'subdirectory' => isset($existing_config_by_directory[$name]) ? $existing_config_by_directory[$name] : InstallStorage::CONFIG_INSTALL_DIRECTORY,
+              'package' => '',
+              'providerExcluded' => NULL,
+              'provider' => isset($existing_config[$name]) ? $existing_config[$name] : NULL,
+              'packageExcluded' => [],
+            ]));
+          }
         }
       }
       $this->setConfigCollection($config_collection);
