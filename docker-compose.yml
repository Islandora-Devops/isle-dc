version: "2.4"

## ISLE 8 Prototype
## May 2020
## Sprint 4 - All services merged

services:
  mariadb:
    image: mariadb:10.3.22
    environment:
      MYSQL_DATABASE: ${DB_NAME:-islandora}
      MYSQL_USER: ${DB_USER:-islandora}
      MYSQL_PASSWORD: ${DB_PASSWORD:-dbpassword}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-dbpassword}
    volumes:
      - mariadb-data:/var/lib/mysql
    healthcheck:
      # https://dev.mysql.com/doc/refman/8.0/en/mysqladmin.html#command_mysqladmin_ping
      test: ["CMD", "mysqladmin", "ping", "--silent"]


  drupal:
    build:
      context: ./
      dockerfile: ${PROJECT_DRUPAL_DOCKERFILE:-./drupal.Dockerfile}
      target: dev
      args:
        - code_dir=./codebase
        - base_image_tag=latest
        - build_environment=dev
        - PHP_DATE_TIMEZONE=${PHP_DATE_TIMEZONE:-UTC}
        # XDEBUG confd build time args - you can set it to 0 turn it off.
        - PHP_XDEBUG=${PHP_XDEBUG:-1}
        - PHP_IDE_CONFIG="serverName=${PHP_IDE_CONFIG_SERVER_NAME:-idcp.localhost}"
        - PHP_XDEBUG_REMOTE_HOST=${PHP_XDEBUG_REMOTE_HOST:-host.docker.internal}
        - PHP_XDEBUG_DEFAULT_ENABLE=${PHP_XDEBUG_DEFAULT_ENABLE:-1}
        - PHP_XDEBUG_REMOTE_CONNECT_BACK=${PHP_XDEBUG_REMOTE_CONNECT_BACK:-0}
        # NGINX confd build time args
        - NGINX_SERVER_ROOT=${APP_DOCROOT:-/var/www/app/web}
        - NGINX_LISTEN_PORT=8080
    depends_on:
      mariadb:
        condition: service_healthy
    environment:
      APP_NAME: ${DRUPAL_SITE_NAME:-islandora}
      APP_ROOT: ${APP_ROOT:-/var/www/app}
      APP_ACCOUNT_NAME: ${DRUPAL_USER_NAME:-islandora}
      APP_ACCOUNT_MAIL: ${DRUPAL_USER_EMAIL:-islandora@example.com}
      DB_NAME: ${DB_NAME:-drupal}
      DB_USER: ${DB_USER:-drupal}
      DB_PASSWORD: ${DB_PASSWORD:-dbpassword}
      DB_HOST: "mariadb"
      DB_PORT: "3306"
      DB_DRIVER: "mysql"
      DRUSH_OPTIONS_URI: "${PROJECT_BASE_URL:-idcp.localhost}:8000"
      DRUPAL_HASH_SALT: ${DRUPAL_HASH_SALT:-tfvQNpDFG2CjY9WHGNgFqC3eoMjyg5pZdGMQ74zjmnIoe0bi8F3hUvBWnGFIAM3nnj2iWA}
      NGINX_LISTEN_PORT: 8080
      AUTO_INSTALL: ${DRUPAL_AUTO_INSTALL:-true}
    volumes:
      # set delegated mode here on docker for mac for faster disk I/O
      - ./codebase:${APP_ROOT:-/var/www/app}:delegated
      - ./config/jwt:/opt/jwt
      - ./data/drupal/files:${FILES_DIR:-/mnt/files}
      # Anonymous volumes as a workaround to prevent empty or non existent host
      # folders from accidentally getting mounted in container and overwrite the
      # composer build stage files.
      - ${APP_ROOT:-/var/www/app}/vendor
      - ${APP_DOCROOT:-/var/www/app/web}/modules/contrib
      - ${APP_DOCROOT:-/var/www/app/web}/themes/contrib
      - ${APP_DOCROOT:-/var/www/app/web}/profiles/contrib
      - ${APP_DOCROOT:-/var/www/app/web}/libraries
    labels:
      - "traefik.http.routers.${PROJECT_NAME:-islandora}.rule=Host(`${PROJECT_BASE_URL:-idcp.localhost}`)"
      - "traefik.http.services.${PROJECT_NAME:-islandora}.loadbalancer.server.port=8080"


  solr:
    image: solr:8.4.1
    ports:
      - "8983:8983"
    volumes:
      - solr-data:/var/solr/data
      - ./config/solr/islandora_solr_conf:/islandora_solr_conf
    entrypoint:
      - docker-entrypoint.sh
      - solr-create
      - -c
      - islandora
      - -d
      - /islandora_solr_conf


  cantaloupe:
    image: lyrasis/cantaloupe:latest # should this be 4.0-1 instead?
    env_file:
      - cantaloupe.env
    ports:
      - "8182:8182"
    # volumes:
    # (optional) bind-mount this file as a template for changes to the cantaloupe container. Currently the cantaloupe.env handles this.
    #   - ./config/cantaloupe/cantaloupe.properties:/cantaloupe/cantaloupe.properties


  houdini:
    #image: islandora/isle-houdini:sp4-alpha
    build:
      context: ../isle-houdini
    env_file:
      - .env
    # ports:
    #   - "8000:8000"
    volumes:
      - ./config/jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


  homarus:
    image: islandora/isle-homarus:sp4-alpha
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-homarus.git#dev
    #      args:
    #        HOMARUS_JWT_ADMIN_TOKEN: $HOMARUS_JWT_ADMIN_TOKEN
    #        HOMARUS_LOG_LEVEL: $HOMARUS_LOG_LEVEL
    #    ports:
    #      - "8001:8000"
    volumes:
      - ./config/jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


  hypercube:
    image: islandora/isle-hypercube:sp4-alpha
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-hypercube.git#dev
    #      args:
    #        HYPERCUBE_JWT_ADMIN_TOKEN: $HYPERCUBE_JWT_ADMIN_TOKEN
    #        HYPERCUBE_LOG_LEVEL: $HYPERCUBE_LOG_LEVEL
    # ports:
    #   - "8002:8000"
    volumes:
      - ./config/jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


  crayfits:
    image: islandora/isle-crayfits:sp4-alpha
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-crayfits.git#dev
    #      args:
    #        FITS_WEBSERVICE_URI: http://fits:8080/fits/examine
    # ports:
    #   - "8003:8000"
    volumes:
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


  fits:
    image: harvardlts/fitsservlet_container:1.5.0
    # ports:
    #   - '8085:8080'


  traefik:
    # review https://hub.docker.com/_/traefik
    image: traefik:2.1.3
    command: --api.insecure=true --providers.docker
    ports:
      - "8000:80"
      #- "443:443"
      #- "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      # SSL Choice 1: To use Let's Encrypt for SSL- uncomment ONLY the line below and then create an empty config/traefik/acme.json file
      # - ./config/traefik/acme.json:/acme.json
      # SSL Choice 2: To use commercial SSLs - uncomment ONLY the line below. Add your SSL certs (.cert, .pem, .key) files to config/traefik/ssl-certs
      # - ./config/traefik/ssl-certs:/certs:ro
      # Use Environment variables to pass in Traefik config; no traefik.yml required
      # by providers
      # Alternative to a static configureation /etc/traefik/traefik.yml"
      # Pass in config via flags or environment variables
      # https://docs.traefik.io/getting-started/configuration-overview
      # Obsolete - "./config/traefik/traefik.local.yml:/etc/traefik/traefik.yml"


  alpaca-connector:
    image: islandora/isle-alpaca:sp4-alpha
    # build:
    # context: https://github.com/Islandora-Devops/isle-alpaca.git#dev
    env_file: .env


  activemq:
    image: rmohr/activemq
    env_file: .env
    ports:
      - "8161:8161" # To make mgmt console available for dev purposes.  use admin:admin to log in
    volumes:
      - activemq-data:/opt/activemq/data


  fcrepo:
    image: islandora/isle-fcrepo:latest
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-fcrepo.git#dev
    #      args:
    #        ARG FCREPO_VERSION: ${FCREPO_VERSION:-5.1.0}
    #        ARG FCREPO_CONFIG_DIR: /opt/fcrepo/config
    #        ARG FCREPO_HOME: /opt/fcrepo/data
    env_file:
      - .env
      - fcrepo.env
    environment:
      - JAVA_MAX_MEM=4096M
      - JAVA_MIN_MEM=1024M
    depends_on:
      mariadb:
        condition: service_healthy
    ports:
      - "8006:8080"
    volumes:
      - ./data/fcrepo/data:/opt/fcrepo/data
      - ./syn-keys:/opt/keys
      - ./config/fcrepo/tomcat-users.xml:/usr/local/tomcat/conf/tomcat-users.xml


  blazegraph:
    image: lyrasis/blazegraph:2.1.5
    environment:
      - JAVA_MAX_MEM=4096M
      - JAVA_MIN_MEM=1024M
    ports:
      - "8007:8080"
    volumes:
      # persist the bigdata.jnl file which can be large
      - ./config/blazegraph/RWStore.properties:/RWStore.properties
      - ./config/blazegraph/inference.nt:/inference.nt
      # Local volume for avoiding permissions issues
      - blazegraph-data:/var/lib/jetty/data
      - ./scripts/blazegraph:/scripts


  gemini:
    image: borndigital/isle-gemini:mvp3-alpha
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-gemini.git#dev
    #      args:
    #        GEMINI_JWT_ADMIN_TOKEN: $GEMINI_JWT_ADMIN_TOKEN
    #        GEMINI_LOG_LEVEL: $GEMINI_LOG_LEVEL
    #    ports:
    #      - "8008:8000"
    volumes:
      - ./config/jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


  milliner:
    image: borndigital/isle-milliner:mvp3-alpha
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-milliner.git#dev
    #      args:
    #        MILLINER_JWT_ADMIN_TOKEN: $MILLINER_JWT_ADMIN_TOKEN
    #        MILLINER_LOG_LEVEL: $MILLINER_LOG_LEVEL
    #    ports:
    #      - "8009:8000"
    volumes:
      - ./config/jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


  recast:
    image: borndigital/isle-recast:mvp3-alpha
    #    build:
    #      context: https://github.com/Islandora-Devops/isle-recast.git#dev
    #      args:
    #        RECAST_JWT_ADMIN_TOKEN: $RECAST_JWT_ADMIN_TOKEN
    #        RECAST_LOG_LEVEL: $RECAST_LOG_LEVEL
    #    ports:
    #      - "8009:8000"
    volumes:
      - ./config/jwt:/opt/jwt
      - ./config/crayfish/php.ini:/usr/local/etc/php/php.ini


volumes:
  # For local database storage persistance we bind mount a local folder.
  # This folder needs to be created prior to docker-compose up or build.
  mariadb-data:
  activemq-data:
  solr-data:
  blazegraph-data:

  # isle-dc-postgres-data # Added to prototype but not currently used    
