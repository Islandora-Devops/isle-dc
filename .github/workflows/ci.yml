name: CI
on:
  push:
    branches:
      - main
      - development
    tags:
      - v*
  pull_request:
    branches:
      - main
      - development

jobs:
    build:
        name: build
        runs-on: ubuntu-latest
        outputs:
          matrix: ${{ steps.excludes-matrix.outputs.matrix }}
        steps:
            # Check out current commit
            - name: Checkout
              uses: actions/checkout@v3

            # Make sure buildkit is enabled
            - name: Enable buildkit
              shell: bash
              run: |
                  echo '{"experimental": "enabled"}' > ~/.docker/config.json

            # Temp fix for 9.4 switch to working tag
            - name: Temp fix for 9.4 switch to working tag
              run: git fetch --all --tags && git checkout cf17931c2bc5f8562ff8d26a7e642b3ca49cb92c codebase/

            # Temp fix for 9.4 copy incremental_version_updater.sh to codebase
            - name: Temp fix for 9.4 copy incremental_version_updater.sh to codebase
              run: cp scripts/incremental_version_updater.sh codebase/incremental_version_updater.sh

            # Build and run the static environment
            - name: Build Static
              run: make static-docker-compose.yml up

            # Temp fix for 9.4 Add github token to composer
            - name: Temp fix for 9.4 Add github token to composer
              run: docker-compose exec -T drupal with-contenv bash -lc "composer config -g github-oauth.github.com ${{ secrets.GH_TOKEN }}"

            # Temp fix for 9.4 run incremental_version_updater.sh
            - name: Temp fix for 9.4 run incremental_version_updater.sh
              run: docker-compose exec -T drupal bash -lc "cd /var/www/drupal && bash /var/www/drupal/incremental_version_updater.sh ${{ secrets.GH_TOKEN }}"

            # Temp fix for 9.4 remove incremental_version_updater.sh in codebase
            - name: Temp fix for 9.4 remove incremental_version_updater.sh in codebase
              run: rm -f codebase/incremental_version_updater.sh

            # Temp fix for 9.4 reset file permissions of codebase
            - name: Temp fix for 9.4 reset file permissions of codebase
              run: make set-codebase-owner

            # Temp fix for 9.4 reset codebase
            - name: Temp fix for 9.4 reset codebase
              run: git checkout codebase/

            # Temp fix for 9.4 run composer install
            - name: Temp fix for 9.4 run composer install
              run: make composer-install

            # Run fix_permissions Script
            - name: Run fix_permissions Script
              run: docker-compose exec -T drupal bash /var/www/drupal/fix_permissions.sh /var/www/drupal/web nginx

            # Run the updatedb command.
            - name: Run Update Hooks
              run: docker-compose exec -T drupal drush updatedb -y

            # Rebuild the theme cache
            - name: Rebuild Theme Cache
              run: docker-compose exec -T drupal drush cc theme-registry

            # Drush tests
            - name: Drush test
              run: docker-compose exec -T drupal drush -d status

            - name: Export image
              run: make static-drupal-image-export

            - uses: actions/upload-artifact@v2
              with:
                name: drupal-image
                path: images

            - name: Generate Test Matrix
              id: test-matrix
              uses: jhu-idc/idc-matrixgen@1.0.0
              with:
                key: suite

            - name: Exclude nightly jobs
              id: excludes-matrix
              uses: jhu-idc/idc-matrixgen@1.0.0
              with:
                key: suite
                glob: '*nightly*.sh'
                exclude: true
                matrix: ${{ steps.test-matrix.outputs.matrix }}
            - name: Notify Slack
              uses: 8398a7/action-slack@v3
              with:
                status: ${{ job.status }}
                fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
              if: failure()
    test:
        name: test
        runs-on: ubuntu-latest
        needs: build
        strategy:
          matrix: ${{ fromJSON(needs.build.outputs.matrix) }}
          fail-fast: false
        steps:
            # Check out current commit
            - name: Checkout
              uses: actions/checkout@v3

            - name: Download Drupal Image
              uses: actions/download-artifact@v2
              with:
                name: drupal-image
                path: images

            - name: Load Drupal Image
              run: docker load < images/static-drupal.tar

            - name: Use static docker-compose file, to test static image
              run:  make static-docker-compose.yml

            - name: Up
              run: make up

            - name: test
              run: |
                mkdir -p end-to-end/reports
                chmod a+rwx end-to-end/reports
                make test test=${{ matrix.suite }}
            - name: reports
              if: always()
              run: |
                mkdir -p end-to-end/reports/${{ matrix.suite }}
                docker ps
                docker logs idc_drupal_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/drupal-${{ matrix.suite }}.log
                docker logs idc_alpaca_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/alpaca-${{ matrix.suite }}.log
                docker logs idc_homarus_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/homarus-${{ matrix.suite }}.log
                docker logs idc_crayfits_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/crayfits-${{ matrix.suite }}.log
                docker logs idc_fits_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/fits-${{ matrix.suite }}.log
                docker logs idc_houdini_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/houdini-${{ matrix.suite }}.log
                docker logs idc_dlq_1 2>&1 | tee end-to-end/reports/${{ matrix.suite }}/dlq-${{ matrix.suite }}.log
            - name: upload reports
              if: always()
              uses: actions/upload-artifact@v2
              with:
                name: reports-${{ matrix.suite }}
                path: end-to-end/reports/${{ matrix.suite }}
            - name: upload screenshots
              if: always()
              uses: actions/upload-artifact@v2
              with:
                name: reports-screenshots
                path: end-to-end/reports/screenshots
            - name: Notify Slack
              uses: 8398a7/action-slack@v3
              with:
                status: ${{ job.status }}
                fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
                MATRIX_CONTEXT: ${{ toJson(matrix) }} # required
              if: failure()
    deploy:
        name: Deploy
        runs-on: ubuntu-latest
        needs: [ build, test ]
        env:
          DOCKER_USER: ${{secrets.DOCKER_USER}}
          DOCKER_PUSH_REPOSITORY: ${{secrets.DOCKER_PUSH_REPOSITORY}}
        steps:
            # Check out current commit
            - name: Checkout
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: Docker Login
              if: ${{ github.event_name != 'pull_request' && env.DOCKER_USER }}
              uses: docker/login-action@v1
              with:
                registry: ghcr.io
                username: ${{ env.DOCKER_USER }}
                password: ${{ secrets.DOCKER_PASS }}

            - name: Download Drupal Image
              if: ${{ github.event_name != 'pull_request' && env.DOCKER_USER }}
              uses: actions/download-artifact@v2
              with:
                name: drupal-image
                path: images

            - name: Load Drupal Image
              if: ${{ github.event_name != 'pull_request' && env.DOCKER_USER }}
              run: docker load < images/static-drupal.tar

            - name: Use static docker-compose file, to deploy image
              run:  make static-docker-compose.yml

              # The primary purpose of this step is to make sure all the non-drupal images are
              # downloaded.
            - name: Load the irest of the stack
              run: docker-compose up -d

            # Push docker images, if we are on the appropriate branch or tag
            - name: Docker Push
              if: ${{ github.event_name != 'pull_request' && env.DOCKER_USER }}
              run: sh tag_and_push_images.sh

            # Experimental way to delete artifact
            - name: Delete Temporary Images
              uses: geekyeggo/delete-artifact@v1
              with:
                name: drupal-image
                
            - name: Notify Slack
              uses: 8398a7/action-slack@v3
              with:
                status: ${{ job.status }}
                fields: repo,message,commit,author,action,eventName,ref,workflow,job,took,pullRequest # selectable (default: repo,message)
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
              if: failure()
